# Cria o nome do serviço
service:
  name: ignitecertificate

# Declara plugins a serem utilizados
plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-dynamodb-local

#Se quiser empacotamento individual
# package:
## individually: true

# Configurações customizadas
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
    stages:
      - dev
      - local
    start:
      # Porta que o serviço vai rodar
      port: 8000
      # Define que vai usar o banco local
      inMemory: true
      # Cria a tabela sozinha se não existir
      migrate: true
  bucket: api-rentx-fxc

# Nome do provedor a ser usado
provider:
  name: aws
  #memorySize: 256
  runtime: nodejs14.x
  region: sa-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"

# Instancia funções a serem utilizadas
functions:
  generateCertificate:
    handler: src/functions/generateCertificate.handle
    # Cria uma rota de acesso HTTP
    events:
      - http:
          path: /generateCertificate
          method: POST
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:PutItem
        Resource: "arn:aws:dynamodb:${self.provider.region}:*:table/users_certificates"
  verifyCertificate:
    handler: src/functions/verifyCertificate.handle
    # Cria uma rota de acesso HTTP
    events:
      - http:
          path: /verifyCertificate/{id}
          method: GET
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: "arn:aws:dynamodb:${self.provider.region}:*:table/users_certificates"

resources:
  # Define recursos na AWS
  Resources:
    # Define a tabela no Dynamodb
    dbCertificateUsers:
      # Tipo do recurso que no caso é uma tabela no Dynamodb
      Type: AWS::DynamoDB::Table
      # Propriedades do recurso
      Properties:
        # Nome da tabela
        TableName: users_certificates
        # Quantidade de requisições que pode fazer
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        # Definições de atributos da tabela
        AttributeDefinitions:
          - AttributeName: id
            # Tipo do atributo S -> String
            AttributeType: S
        # Schema de chave primária e seu tipo
        KeySchema:
          - AttributeName: id
            KeyType: HASH